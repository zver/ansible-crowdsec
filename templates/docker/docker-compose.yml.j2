---
services:  
  crowdsec:
    image: crowdsecurity/crowdsec:{{ cs_docker_image_tag }}
    container_name: crowdsec
    restart: always
    networks:
      {{ cs_docker_network }}:

    ports:
{% if cs_lapi_server %}
      - "{{ cs_lapi_listen }}:{{ cs_lapi_port }}:{{ cs_lapi_port }}"
{% endif %}
{% if cs_prometheus_enabled %}
      - "{{ cs_prometheus_listen_addr }}:{{ cs_prometheus_listen_port }}:{{ cs_prometheus_listen_port }}"
{% endif %}

    environment:
{% if cs_lapi_agent_docker_socket_proxy %}
      DOCKER_HOST: tcp://socket-proxy:2375
{% endif %}
{% if cs_collections_list | default([]) %}
      COLLECTIONS: {{ cs_collections_list | join(' ') }}
{% endif %}
{% if cs_scenarios_list | default([]) %}
      SCENARIOS: {{ cs_scenarios_list | join(' ') }}
{% endif %}
{% if cs_parsers_list | default([]) %}
      PARSERS: {{ cs_parsers_list | join(' ') }}
{% endif %}
{% if cs_postoverflows_list | default([]) %}
      POSTOVERFLOWS: {{ cs_postoverflows_list | join(' ') }}
{% endif %}
{% if not cs_central_api_enabled %}
      DISABLE_ONLINE_API: true
{% endif %}
{% if not cs_lapi_server %}
      DISABLE_LOCAL_API: true
{% endif %}
{% if cs_lapi_agent %}
      AGENT_USERNAME: {{ inventory_hostname }}
      AGENT_PASSWORD: {{ (inventory_hostname + cs_agent_secret) | hash('sha256') | truncate(32, end='') }}
{% endif %}

    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./volumes/var_lib_crowdsec_data:/var/lib/crowdsec/data/
      - ./volumes/etc_crowdsec:/etc/crowdsec
{% if cs_lapi_agent %}
{% for vol in cs_docker_agent_volumes %}
      - {{ vol }}
{% endfor %}
{% if cs_lapi_agent_docker_socket_proxy %}
  socket-proxy:
    networks:
      {{ cs_docker_network }}:
    restart: always
    image: lscr.io/linuxserver/socket-proxy:latest
    container_name: socket-proxy
    environment:
      LOG_LEVEL: warning
      INFO: 1
      CONTAINERS: 1
      POST: 0
      BUILD: 0
      COMMIT: 0
      CONFIGS: 0
      DISTRIBUTION: 0
      EXEC: 0
      GRPC: 0
      IMAGES: 0
      NETWORKS: 0
      NODES: 0
      PLUGINS: 0
      SERVICES: 0
      SESSION: 0
      SWARM: 0
      SYSTEM: 0
      TASKS: 0
      VOLUMES: 0
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock:ro'
    read_only: true
    tmpfs:
      - /run
{% endif %}
{% endif %}

networks:
  crowdsec:
    driver: bridge