---
- name: Crowdsec - ajust /etc/crowdsec/config.yaml listen_uri lapi
  replace:
    path: "/etc/crowdsec/config.yaml"
    regexp: 'listen_uri: 127.0.0.1:8080'
    replace: "listen_uri: {{ crowdsec_lapi_ip }}:{{ crowdsec_lapi_port }}"
    backup: true

- name: Crowdsec - apt update and install postgresql
  package:
    update_cache: true
    name:
      - postgresql
      - python3-psycopg2
    state: present
  when:
    - crowdsec_lapi_db is defined
    - crowdsec_lapi_db == "psql"

- name: Crowdsec - postgresql enable and start services
  service:
    name: postgresql
    state: started
    enabled: true
  when:
    - crowdsec_lapi_db is defined
    - crowdsec_lapi_db == "psql"

- name: Crowdsec - create crowdsec database
  postgresql_db:
    state: present
    name: "{{ crowdsec_psql_db_name }}"
  become: true
  become_user: postgres
  when:
    - crowdsec_lapi_db is defined
    - crowdsec_lapi_db == "psql"

- name: Crowdsec - create crowdsec db userc
  postgresql_user:
    state: present
    name: "{{ crowdsec_psql_db_user }}"
    password: "{{ crowdsec_psql_db_password }}"
  become: true
  become_user: postgres
  when:
    - crowdsec_lapi_db is defined
    - crowdsec_lapi_db == "psql"

- name: Crowdsec - grant db user access to app db
  postgresql_privs:
    type: database
    database: "{{ crowdsec_psql_db_name }}"
    roles: "{{ crowdsec_psql_db_user }}"
    grant_option: no
    privs: all
  become: true
  become_user: postgres
  when:
    - crowdsec_lapi_db is defined
    - crowdsec_lapi_db == "psql"

- name: Crowdsec - /etc/crowdsec/config.yaml template for lapi server
  template:
    src: templates/cs_config.j2
    dest: /etc/crowdsec/config.yaml
    owner: root
    group: root
    mode: "0644"

- name: Crowdsec - cscli machines add cs_agents on server
  command:
    cmd: "sudo cscli machines add {{ inventory_hostname }} -p {{ crowdsec_agent_hosts_password }} -u http://{{ crowdsec_lapi_ip }}:{{ crowdsec_lapi_port }} --force"

- name: Crowdsec - cscli machines add cs_agents
  command:
    cmd: "sudo cscli machines add {{ item }} -p {{ crowdsec_agent_hosts_password }} -u http://{{ crowdsec_lapi_ip }}:{{ crowdsec_lapi_port }} -f ~/{{ item}}_local_api_credentials.yaml --force"
  loop: "{{ crowdsec_agent_hosts  }}"

- name: Add Crowdsec bouncers
  command:
    cmd: "sudo cscli bouncers add {{ item }} -k {{ crowdsec_agent_hosts_password }}"
  loop: "{{ crowdsec_agent_bouncers }}"
  register: cscli_command
  ignore_errors: true
  when:
    - crowdsec_agent_bouncers is defined
    - crowdsec_agent_bouncers|length > 0
  failed_when: >
    cscli_command.rc != 0 and
    'unable to create bouncer: bouncer' not in cscli_command.stderr and
    'already exists' not in cscli_command.stderr

- name: Crowdsec  - daemon reload and restart
  ansible.builtin.systemd:
    state: restarted
    daemon_reload: true
    name: crowdsec

- name: Crowdsec - enable and start services
  service:
    name: crowdsec
    state: started
    enabled: true
